[{"path":"https://jinghuazhao.github.io/gaawr2/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 gaawr2 authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jinghuazhao.github.io/gaawr2/articles/gaawr2.html","id":"hello-welcome-to-gaawr2","dir":"Articles","previous_headings":"","what":"Hello, welcome to gaawr2!","title":"Genetic Association Analysis with R (II)","text":"start several ways printting welcome message.","code":""},{"path":"https://jinghuazhao.github.io/gaawr2/articles/gaawr2.html","id":"r","dir":"Articles","previous_headings":"1 Hello, welcome to gaawr2!","what":"R","title":"Genetic Association Analysis with R (II)","text":"customary use R command line interface (CLI) graphical user interface (GUI),","code":"print(\"Hello, welcome to gaawr2!\") #> [1] \"Hello, welcome to gaawr2!\""},{"path":"https://jinghuazhao.github.io/gaawr2/articles/gaawr2.html","id":"linux","dir":"Articles","previous_headings":"1 Hello, welcome to gaawr2!","what":"Linux","title":"Genetic Association Analysis with R (II)","text":"often embed R Linux script,","code":"# environment variable export message=\"Hello, welcome to gaawr2!\" Rscript -e 'message=Sys.getenv(\"message\");print(message)' # a code chunk R --no-save -q <<END options(echo=FALSE) print(\"Hello, welcome to gaawr2!\") END # a processor echo Hello, welcome to gaawr2 | \\ Rscript -e '    message <- scan(\"stdin\", what = \"\", sep = \"\\n\", quiet = TRUE);    write.table(message, col.names = FALSE, row.names = FALSE, quote = FALSE) ' | \\ cat #> [1] \"Hello, welcome to gaawr2!\" #> > options(echo=FALSE) #> [1] \"Hello, welcome to gaawr2!\" #> Hello, welcome to gaawr2"},{"path":"https://jinghuazhao.github.io/gaawr2/articles/gaawr2.html","id":"operators-and-packages","dir":"Articles","previous_headings":"","what":"Operators and packages","title":"Genetic Association Analysis with R (II)","text":"operators intuitive many ways, like highlight two types , scope operator (::) useful since user executes command particular package without loading , usually faster. native (|>) contributed (%>%) pipe operators enable chained operations, latter popularized R magrittr dplyr packages Table 2.1: Mean horse power weight Cylinder mpg 20  Comprehensive R Archive Network (CRAN) host Bioconductor host many fined-tuned user-contributed packages, installation furnished install.packages() standard way install CRAN BiocManager::install() current approach install package Bioconductor project.","code":"sumstats <- mtcars %>%   dplyr::filter(mpg > 20) %>%   dplyr::group_by(cyl) %>%   dplyr::summarize(avg_hp = mean(hp), avg_wt = mean(wt)) knitr::kable(sumstats,caption=\"Mean horse power and weight by Cylinder for mpg over 20\") ggplot2::ggplot(sumstats, ggplot2::aes(x = factor(cyl), y = avg_hp, fill = factor(cyl))) + ggplot2::geom_bar(stat = \"identity\") + ggplot2::labs(     title = \"Average Horsepower by Cylinder Count (mpg > 20)\",     x = \"Number of Cylinders\",     y = \"Average Horsepower\"   ) + ggplot2::theme_minimal() + ggplot2::scale_fill_brewer(palette = \"Set2\", name = \"Cylinders\")"},{"path":"https://jinghuazhao.github.io/gaawr2/articles/gaawr2.html","id":"data-analysis","dir":"Articles","previous_headings":"","what":"Data analysis","title":"Genetic Association Analysis with R (II)","text":"Topics vary classic models mets twin data heavily featured candidate gene studies, Hardy-Weinberg equilirium (HWE), counterparts Genomewide association study (GWAS) various types association statistics, QQ/Manhattan/local association plots. lot interests machine learning (ML), artificial language (AI), including deep learning, just add one acronym, bulk also readily available.","code":""},{"path":"https://jinghuazhao.github.io/gaawr2/articles/gaawr2.html","id":"hardyweinberg","dir":"Articles","previous_headings":"3 Data analysis","what":"HardyWeinberg","title":"Genetic Association Analysis with R (II)","text":"set run package HWE. Three data sources used: MN blood group documentation, chromosome X SNP HLA/DQR, Figure 3.1: SNP ternary plot Table 3.1: Genotype distribution DQR","code":"options(width=200) # MN blood group SNP <- c(MM = 298, MN = 489, NN = 213) HardyWeinberg::maf(SNP) #>      N  #> 0.4575 HardyWeinberg::HWTernaryPlot(SNP,region=0,hwcurve=FALSE,grid=TRUE,markercol=\"blue\") HardyWeinberg::HWChisq(SNP, cc = 0, verbose = TRUE) #> Chi-square test for Hardy-Weinberg equilibrium (autosomal) #> Chi2 =  0.2214896 DF =  1 p-value =  0.6379073 D =  -3.69375 f =  0.01488253 # Chromosome X xSNP <- c(A=10, B=20, AA=30, AB=20, BB=10) HardyWeinberg::HWChisq(xSNP,cc=0,x.linked=TRUE,verbose=TRUE) #> Chi-square test for Hardy-Weinberg equilibrium (X-chromosomal) #> Chi2 =  14.86111 DF = 2 p-value =  0.0005928581 D =  NA f =  0.25 # HLA/DQR library(gap) DQR <- hla[,3:4] a1 <- DQR[1] a2 <- DQR[2] GenotypeCounts <- HardyWeinberg::AllelesToTriangular(a1,a2) knitr::kable(GenotypeCounts,caption=\"Genotype distribution of DQR\") HardyWeinberg::HWPerm.mult(GenotypeCounts,nperm=1000) #> Permutation test for Hardy-Weinberg equilibrium (autosomal). #> 25 alleles detected. #> Observed statistic: 1.461325e-84   1000 permutations. p-value: 0.023 HardyWeinberg::HWStr(hla[,3:4],test=\"permutation\",nperm=1000) #> 1 STRs detected. #>      STR   N Nt     MinorAF   MajorAF        Ho        He       Hp  pval #> 1 DQR.a1 271 25 0.001845018 0.1494465 0.8856089 0.9097643 2.654949 0.026"},{"path":"https://jinghuazhao.github.io/gaawr2/articles/gaawr2.html","id":"snpassoc","dir":"Articles","previous_headings":"3 Data analysis","what":"SNPassoc","title":"Genetic Association Analysis with R (II)","text":"package implements procedures appropriate candidate gene association analysis, variety genetic models. Fist look meta-data, include HWE. Table 3.2: First three records & two SNPs variable snpCols skips six columns non-SNP data two SNPs. turn genetic models first one,","code":"options(width=200,digits=2) data(asthma, package = \"SNPassoc\") str(asthma, list.len=8) #> 'data.frame':    1578 obs. of  57 variables: #>  $ country    : Factor w/ 10 levels \"Australia\",\"Belgium\",..: 5 5 5 5 5 5 5 5 5 5 ... #>  $ gender     : Factor w/ 2 levels \"Females\",\"Males\": 2 2 2 1 1 1 1 2 1 1 ... #>  $ age        : num  42.8 50.2 46.7 47.9 48.4 ... #>  $ bmi        : num  20.1 24.7 27.7 33.3 25.2 ... #>  $ smoke      : int  1 0 0 0 0 1 0 0 0 0 ... #>  $ casecontrol: int  0 0 0 0 1 0 0 0 0 0 ... #>  $ rs4490198  : Factor w/ 3 levels \"AA\",\"AG\",\"GG\": 3 3 3 2 2 2 3 2 2 2 ... #>  $ rs4849332  : Factor w/ 3 levels \"GG\",\"GT\",\"TT\": 3 2 3 2 1 2 3 3 2 1 ... #>   [list output truncated] knitr::kable(asthma[1:3,1:8],caption=\"First three records & two SNPs\") snpCols <- colnames(asthma)[6+(1:2)] snps <- SNPassoc::setupSNP(data=asthma[snpCols], colSNPs=1:length(snpCols), sep=\"\") summary(snps, print=FALSE) #>           alleles major.allele.freq HWE  missing (%) #> rs4490198 A/G     59                0.17 0.6         #> rs4849332 G/T     62                0.52 0.1 lapply(snps, head) #> $rs4490198 #> [1] G/G G/G G/G A/G A/G A/G #> Genotypes: A/A A/G G/G #> Alleles:  G A  #>  #> $rs4849332 #> [1] T/T G/T T/T G/T G/G G/T #> Genotypes: G/G G/T T/T #> Alleles:  T G lapply(snps, summary) #> $rs4490198 #> Genotypes:  #>      frequency percentage #> A/A        562         36 #> A/G        731         47 #> G/G        275         18 #> NA's        10            #>  #> Alleles:  #>      frequency percentage #> G         1281         41 #> A         1855         59 #> NA's        20            #>  #> HWE (p value): 0.17  #>  #> $rs4849332 #> Genotypes:  #>      frequency percentage #> G/G        609         39 #> G/T        732         46 #> T/T        236         15 #> NA's         1            #>  #> Alleles:  #>      frequency percentage #> T         1204         38 #> G         1950         62 #> NA's         2            #>  #> HWE (p value): 0.52 SNPassoc::tableHWE(snps) #>           HWE (p value) flag #> rs4490198 0.17               #> rs4849332 0.52 asthma.snps <- asthma %>%                dplyr::rename(cc=casecontrol) %>%                SNPassoc::setupSNP(colSNPs=7:ncol(.), sep=\"\") SNPassoc::association(bmi ~ rs4490198, asthma.snps) #>  #> SNP: rs4490198  adjusted by:  #>                 n   me    se     dif  lower upper p-value  AIC #> Codominant                                                     #> A/A           558 25.5 0.176  0.0000                0.885 9015 #> A/G           725 25.6 0.174  0.0217 -0.461 0.505              #> G/G           273 25.4 0.237 -0.1299 -0.763 0.504              #> Dominant                                                       #> A/A           558 25.5 0.176  0.0000                0.932 9013 #> A/G-G/G       998 25.5 0.142 -0.0198 -0.473 0.434              #> Recessive                                                      #> A/A-A/G      1283 25.6 0.125  0.0000                0.626 9013 #> G/G           273 25.4 0.237 -0.1421 -0.714 0.429              #> Overdominant                                                   #> A/A-G/G       831 25.5 0.142  0.0000                0.772 9013 #> A/G           725 25.6 0.174  0.0643 -0.371 0.500              #> log-Additive                                                   #> 0,1,2                        -0.0502 -0.357 0.257   0.749 9013 SNPassoc::association(cc ~ rs4490198, data=asthma.snps) #>  #> SNP: rs4490198  adjusted by:  #>                 0    %   1    %   OR lower upper p-value  AIC #> Codominant                                                    #> A/A           449 36.5 113 33.4 1.00               0.528 1639 #> A/G           565 45.9 166 49.1 1.17  0.89  1.53              #> G/G           216 17.6  59 17.5 1.09  0.76  1.55              #> Dominant                                                      #> A/A           449 36.5 113 33.4 1.00               0.295 1638 #> A/G-G/G       781 63.5 225 66.6 1.14  0.89  1.48              #> Recessive                                                     #> A/A-A/G      1014 82.4 279 82.5 1.00               0.964 1639 #> G/G           216 17.6  59 17.5 0.99  0.72  1.36              #> Overdominant                                                  #> A/A-G/G       665 54.1 172 50.9 1.00               0.300 1638 #> A/G           565 45.9 166 49.1 1.14  0.89  1.45              #> log-Additive                                                  #> 0,1,2        1230 78.4 338 21.6 1.06  0.90  1.26   0.495 1638 SNPassoc::association(cc ~ rs4490198 + country + smoke, asthma.snps) #>  #> SNP: rs4490198  adjusted by: country smoke  #>                 0    %   1    %   OR lower upper p-value  AIC #> Codominant                                                    #> A/A           448 36.6 112 33.2 1.00               0.541 1403 #> A/G           563 46.0 166 49.3 1.18  0.88  1.59              #> G/G           213 17.4  59 17.5 1.08  0.73  1.60              #> Dominant                                                      #> A/A           448 36.6 112 33.2 1.00               0.317 1401 #> A/G-G/G       776 63.4 225 66.8 1.15  0.87  1.52              #> Recessive                                                     #> A/A-A/G      1011 82.6 278 82.5 1.00               0.909 1402 #> G/G           213 17.4  59 17.5 0.98  0.69  1.39              #> Overdominant                                                  #> A/A-G/G       661 54.0 171 50.7 1.00               0.298 1401 #> A/G           563 46.0 166 49.3 1.15  0.88  1.50              #> log-Additive                                                  #> 0,1,2        1224 78.4 337 21.6 1.06  0.88  1.28   0.538 1402 SNPassoc::association(cc ~ rs4490198 + survival::strata(gender), asthma.snps) #>  #> SNP: rs4490198  adjusted by: survival::strata(gender)  #>                 0    %   1    %   OR lower upper p-value  AIC #> Codominant                                                    #> A/A           449 36.5 113 33.4 1.00               0.552 1630 #> A/G           565 45.9 166 49.1 1.16  0.89  1.52              #> G/G           216 17.6  59 17.5 1.10  0.77  1.57              #> Dominant                                                      #> A/A           449 36.5 113 33.4 1.00               0.295 1629 #> A/G-G/G       781 63.5 225 66.6 1.15  0.89  1.48              #> Recessive                                                     #> A/A-A/G      1014 82.4 279 82.5 1.00               0.942 1630 #> G/G           216 17.6  59 17.5 1.01  0.74  1.39              #> Overdominant                                                  #> A/A-G/G       665 54.1 172 50.9 1.00               0.344 1629 #> A/G           565 45.9 166 49.1 1.12  0.88  1.43              #> log-Additive                                                  #> 0,1,2        1230 78.4 338 21.6 1.07  0.90  1.27   0.455 1629 SNPassoc::association(cc ~ rs4490198, asthma.snps, subset=country==\"Spain\") #>  #> SNP: rs4490198  adjusted by:  #>                0    %  1    %   OR lower upper p-value AIC #> Codominant                                                 #> A/A          141 43.3 18 37.5 1.00               0.626 292 #> A/G          145 44.5 22 45.8 1.19  0.61  2.31             #> G/G           40 12.3  8 16.7 1.57  0.63  3.87             #> Dominant                                                   #> A/A          141 43.3 18 37.5 1.00               0.449 290 #> A/G-G/G      185 56.7 30 62.5 1.27  0.68  2.37             #> Recessive                                                  #> A/A-A/G      286 87.7 40 83.3 1.00               0.410 290 #> G/G           40 12.3  8 16.7 1.43  0.62  3.27             #> Overdominant                                               #> A/A-G/G      181 55.5 26 54.2 1.00               0.860 291 #> A/G          145 44.5 22 45.8 1.06  0.57  1.94             #> log-Additive                                               #> 0,1,2        326 87.2 48 12.8 1.24  0.80  1.91   0.339 290 SNPassoc::association(cc ~ SNPassoc::dominant(rs4490198)*factor(smoke), data=asthma.snps) #>  #>       SNP: SNPassoc::dominant(rs4490198  adjusted by:  #>  Interaction  #> --------------------- #>           0       OR lower upper   1      OR lower upper #> A/A     293  84 1.00    NA    NA 155 28 0.63  0.39  1.01 #> A/G-G/G 539 172 1.11  0.83   1.5 237 53 0.78  0.53  1.15 #>  #> p interaction: 0.7  #>  #>  factor(smoke) within SNPassoc::dominant(rs4490198  #> --------------------- #> A/A  #>     0  1   OR lower upper #> 0 293 84 1.00    NA    NA #> 1 155 28 0.63  0.39  1.01 #>  #> A/G-G/G  #>     0   1  OR lower upper #> 0 539 172 1.0    NA    NA #> 1 237  53 0.7   0.5  0.99 #>  #> p trend: 0.7  #>  #>  SNPassoc::dominant(rs4490198 within factor(smoke)  #> --------------------- #> 0  #>           0   1   OR lower upper #> A/A     293  84 1.00    NA    NA #> A/G-G/G 539 172 1.11  0.83   1.5 #>  #> 1  #>           0  1   OR lower upper #> A/A     155 28 1.00    NA    NA #> A/G-G/G 237 53 1.24  0.75  2.04 #>  #> p trend: 0.7 SNPassoc::association(cc ~ rs4490198*factor(rs11123242), data=asthma.snps, model.interaction = \"dominant\" ) #>  #>       SNP: rs4490198  adjusted by:  #>  Interaction  #> --------------------- #>         C/C       OR lower upper C/T       OR lower upper  0  1  T/T lower upper #> A/A     448 113 1.00    NA    NA   1   0 0.00  0.00    NA  0  0   NA    NA    NA #> A/G-G/G 371 109 1.16  0.87  1.57 365 102 1.11  0.82   1.5 39 14 1.42  0.75  2.71 #>  #> p interaction: 0.5  #>  #>  factor(rs11123242) within rs4490198  #> --------------------- #> A/A  #>       0   1 OR lower upper #> C/C 448 113  1    NA    NA #> C/T   1   0  0     0    NA #> T/T   0   0 NA    NA    NA #>  #> A/G-G/G  #>       0   1   OR lower upper #> C/C 371 109 1.00    NA    NA #> C/T 365 102 0.95  0.70  1.29 #> T/T  39  14 1.22  0.64  2.33 #>  #> p trend: 0.5  #>  #>  rs4490198 within factor(rs11123242)  #> --------------------- #> C/C  #>           0   1   OR lower upper #> A/A     448 113 1.00    NA    NA #> A/G-G/G 371 109 1.16  0.87  1.57 #>  #> C/T  #>           0   1 OR lower upper #> A/A       1   0  1    NA    NA #> A/G-G/G 365 102 NA     0    NA #>  #> T/T  #>          0  1 OR lower upper #> A/A      0  0  1    NA    NA #> A/G-G/G 39 14 NA    NA    NA #>  #> p trend: 0.5"},{"path":"https://jinghuazhao.github.io/gaawr2/articles/gaawr2.html","id":"haplo-stats","dir":"Articles","previous_headings":"3 Data analysis","what":"haplo.stats","title":"Genetic Association Analysis with R (II)","text":"package considers haplotype estimation using EM-algorithms genetic association generalized linear model (GLM). (#tab:haplo.stats)Haplotypes rs714588, rs1023555, rs898070","code":"data(asthma, package = \"SNPassoc\") asthma.snps <- SNPassoc::setupSNP(data=asthma, colSNPs=grep(\"^rs\", colnames(asthma)), sep=\"\") asthma.snps <- SNPassoc::setupSNP(data=asthma, colSNPs=grep(\"^rs\", colnames(asthma)), sep=\"\") %>%                dplyr::rename(cc=casecontrol) library(haplo.stats) snpsH <- c(\"rs714588\", \"rs1023555\",  \"rs898070\") genoH <- SNPassoc::make.geno(asthma.snps, snpsH) em <- haplo.stats::haplo.em(genoH, locus.label = snpsH, miss.val = c(0, NA)) em #> ========================================================================================================================================================================================================  #>                                                                                                Haplotypes                                                                                                 #> ========================================================================================================================================================================================================  #>   rs714588 rs1023555 rs898070 hap.freq #> 1        1         1        1    0.041 #> 2        1         1        2    0.024 #> 3        1         2        1    0.043 #> 4        1         2        2    0.440 #> 5        2         1        1    0.083 #> 6        2         1        2    0.084 #> 7        2         2        1    0.208 #> 8        2         2        2    0.077 #> ========================================================================================================================================================================================================  #>                                                                                                 Details                                                                                                   #> ========================================================================================================================================================================================================  #> lnlike =  -4103  #> lr stat for no LD =  775 , df =  4 , p-val =  0 knitr::kable(cbind(em$haplotype,em$hap.prob),caption=\"Haplotypes of rs714588, rs1023555, rs898070\") mod <- haplo.stats::haplo.glm(cc ~ genoH, data=asthma.snps,                               family=\"binomial\",                               locus.label=snpsH,                               allele.lev=attributes(genoH)$unique.alleles,                               control = haplo.stats::haplo.glm.control(haplo.freq.min=0.05)) mod #>  #> Call:  haplo.stats::haplo.glm(formula = cc ~ genoH, family = \"binomial\",  #>     data = asthma.snps, locus.label = snpsH, control = haplo.stats::haplo.glm.control(haplo.freq.min = 0.05),  #>     allele.lev = attributes(genoH)$unique.alleles) #>  #> Coefficients: #> (Intercept)      genoH.5      genoH.6      genoH.7      genoH.8   genoH.rare   #>  -1.3741805    0.0900879   -0.0082069    0.0560710    0.0882132    0.1396095   #>  #> Haplotypes: #>            rs714588 rs1023555 rs898070 hap.freq #> genoH.5           G         A        A 0.082685 #> genoH.6           G         A        G 0.084073 #> genoH.7           G         T        A 0.207956 #> genoH.8           G         T        G 0.076886 #> genoH.rare        *         *        * 0.107905 #> haplo.base        A         T        G 0.440495 #>  #> Degrees of Freedom:  1577 Total (i.e. Null);  1572 Residual #>  #>      Null Deviance:  1645  #>  Residual Deviance:  1643  #>                AIC:  1655 SNPassoc::intervals(mod) #>                freq   or   95%   C.I.   P-val  #>          ATG 0.4405   1.00 Reference haplotype  #>          GAA 0.0827   1.09 (   0.77 -   1.56 )  0.6160  #>          GAG 0.0841   0.99 (   0.69 -   1.42 )  0.9642  #>          GTA 0.2080   1.06 (   0.84 -   1.34 )  0.6379  #>          GTG 0.0769   1.09 (   0.76 -   1.58 )  0.6367  #>   genoH.rare 0.1079   1.15 (   0.83 -   1.59 )  0.3968 snpsH2 <- labels(asthma.snps)[6:15] genoH2 <- SNPassoc::make.geno(asthma.snps, snpsH2) haplo.score <- list() for (i in 1:4) haplo.score[[i]] <- haplo.stats::haplo.score.slide(asthma.snps$cc, genoH2,                                          trait.type=\"binomial\",                                          n.slide=i+3,                                          simulate=TRUE,                                          sim.control=haplo.stats::score.sim.control(min.sim=100,                                          max.sim=200))  par(mfrow=c(2,2)) for (i in 1:4) {     plot(haplo.score[[i]])     title(paste(\"Sliding Window=\", i+3, sep=\"\")) } snpsH3 <- snpsH2[4:7] genoH3 <- make.geno(asthma.snps, snpsH3) mod <- haplo.stats::haplo.glm(cc~genoH3, data=asthma.snps,              family=\"binomial\",              locus.label=snpsH3,              allele.lev=attributes(genoH3)$unique.alleles,              control = haplo.stats::haplo.glm.control(haplo.freq.min=0.05)) mod #>  #> Call:  haplo.stats::haplo.glm(formula = cc ~ genoH3, family = \"binomial\",  #>     data = asthma.snps, locus.label = snpsH3, control = haplo.stats::haplo.glm.control(haplo.freq.min = 0.05),  #>     allele.lev = attributes(genoH3)$unique.alleles) #>  #> Coefficients: #> (Intercept)     genoH3.2     genoH3.9    genoH3.11  genoH3.rare   #>  -1.2880793    0.0067873   -0.1146385    0.1099134   -0.2505565   #>  #> Haplotypes: #>             rs1430090 rs6737251 rs11685217 rs1430097 hap.freq #> genoH3.2            G         C          C         C  0.29632 #> genoH3.9            T         T          C         A  0.11839 #> genoH3.11           T         T          T         A  0.18302 #> genoH3.rare         *         *          *         *  0.05021 #> haplo.base          T         C          C         C  0.35206 #>  #> Degrees of Freedom:  1577 Total (i.e. Null);  1573 Residual #>  #>      Null Deviance:  1645  #>  Residual Deviance:  1641  #>                AIC:  1651 SNPassoc::intervals(mod) #>                freq   or   95%   C.I.   P-val  #>         TCCC 0.3521   1.00 Reference haplotype  #>         GCCC 0.2963   1.01 (   0.82 -   1.24 )  0.9495  #>         TTCA 0.1184   0.89 (   0.67 -   1.20 )  0.4433  #>         TTTA 0.1830   1.12 (   0.87 -   1.43 )  0.3796  #>  genoH3.rare 0.0502   0.78 (   0.50 -   1.22 )  0.2750 mod.adj.ref <- glm(cc ~ smoke, data=asthma.snps, family=\"binomial\") mod.adj <- haplo.glm(cc ~ genoH3 + smoke, data=asthma.snps,                  family=\"binomial\",                  locus.label=snpsH3,                  allele.lev=attributes(genoH3)$unique.alleles,                  control = haplo.stats::haplo.glm.control(haplo.freq.min=0.05)) mod.adj #>  #> Call:  haplo.glm(formula = cc ~ genoH3 + smoke, family = \"binomial\",  #>     data = asthma.snps, locus.label = snpsH3, control = haplo.stats::haplo.glm.control(haplo.freq.min = 0.05),  #>     allele.lev = attributes(genoH3)$unique.alleles) #>  #> Coefficients: #> (Intercept)     genoH3.2     genoH3.9    genoH3.11  genoH3.rare        smoke   #>   -1.189508     0.019374    -0.097111     0.113149    -0.253046    -0.393112   #>  #> Haplotypes: #>             rs1430090 rs6737251 rs11685217 rs1430097 hap.freq #> genoH3.2            G         C          C         C  0.29539 #> genoH3.9            T         T          C         A  0.11860 #> genoH3.11           T         T          T         A  0.18319 #> genoH3.rare         *         *          *         *  0.05044 #> haplo.base          T         C          C         C  0.35238 #>  #> Degrees of Freedom:  1570 Total (i.e. Null);  1565 Residual #>  #> Subjects removed by NAs in y or x, or all NA in geno #>   yxmiss genomiss  #>        7        0  #>  #>      Null Deviance:  1639  #>  Residual Deviance:  1627  #>                AIC:  1639 lrt.adj <- mod.adj.ref$deviance - mod.adj$deviance pchisq(lrt.adj, mod.adj$lrt$df, lower=FALSE) #> [1] 0.65"},{"path":"https://jinghuazhao.github.io/gaawr2/articles/gaawr2.html","id":"gmmat","dir":"Articles","previous_headings":"3 Data analysis","what":"GMMAT","title":"Genetic Association Analysis with R (II)","text":"following modified slightly package vignette, Table 3.3: Score tests GLMM four SNPs Table 3.3: Wald tests GLMM four SNPs BGEN PLINK binary file illustrated.","code":"data(example,package=\"GMMAT\") attach(example) model0 <- GMMAT::glmmkin(disease ~ age + sex, data = pheno, kins = GRM,                          id = \"id\", family = binomial(link = \"logit\")) model1 <- GMMAT::glmmkin(fixed = trait ~ age + sex, data = pheno, kins = GRM,                          id = \"id\", family = gaussian(link = \"identity\")) model2 <- GMMAT::glmmkin(fixed = trait ~ age + sex, data = pheno, kins = GRM,                          id = \"id\", groups = \"disease\",                          family = gaussian(link = \"identity\")) snps <- c(\"SNP10\", \"SNP25\", \"SNP1\", \"SNP0\") geno.file <- system.file(\"extdata\", \"geno.bgen\", package = \"GMMAT\") samplefile <- system.file(\"extdata\", \"geno.sample\", package = \"GMMAT\") outfile <- \"glmm.score.txt\" GMMAT::glmm.score(model0, infile = geno.file, BGEN.samplefile = samplefile,                   outfile = outfile) read.delim(outfile) |>      head(n=4) |>      knitr::kable(caption=\"Score tests under GLMM on four SNPs\",digits=2) unlink(outfile) bed.file <- system.file(\"extdata\", \"geno.bed\", package = \"GMMAT\") |>             tools::file_path_sans_ext() model.wald <- GMMAT::glmm.wald(fixed = disease ~ age + sex, data = pheno,                                kins = GRM, id = \"id\", family = binomial(link = \"logit\"),                                infile = bed.file, snps = snps) knitr::kable(model.wald,caption=\"Wald tests under GLMM on four SNPs\") detach(example)"},{"path":"https://jinghuazhao.github.io/gaawr2/articles/gaawr2.html","id":"proteogenomics","dir":"Articles","previous_headings":"3 Data analysis","what":"Proteogenomics","title":"Genetic Association Analysis with R (II)","text":"See https://jinghuazhao.github.io/pQTLtools/. overview proteomics found relevant paper1.","code":""},{"path":"https://jinghuazhao.github.io/gaawr2/articles/gaawr2.html","id":"gwas","dir":"Articles","previous_headings":"3 Data analysis","what":"GWAS","title":"Genetic Association Analysis with R (II)","text":"return asthma data used SNPassoc. assoc.maxstat coerced matrix later, appears problematic knit though.","code":"assoc <- SNPassoc::WGassociation(cc, data=asthma.snps) assoc.adj <- SNPassoc::WGassociation(cc ~ country + smoke, asthma.snps) assoc.maxstat <- SNPassoc::maxstat(asthma.snps, cc) assoc %>%   as.data.frame() %>%   dplyr::select(-comments) %>%   knitr::kable(caption=\"SNP association\") assoc.adj %>%   as.data.frame() %>%   dplyr::select(-comments) %>%   knitr::kable(caption=\"with adjustment for contountry & smoking\") assoc.maxstat %>%   `[`(,) %>%   t() %>%   knitr::kable(caption = \"Max stat association statistics\")"},{"path":"https://jinghuazhao.github.io/gaawr2/articles/gaawr2.html","id":"h2-jags","dir":"Articles","previous_headings":"3 Data analysis","what":"h2.jags","title":"Genetic Association Analysis with R (II)","text":"Table 3.4: MCMC results Meyer data","code":"set.seed(1234567) meyer <- within(meyer,{          y[is.na(y)] <- rnorm(length(y[is.na(y)]),mean(y,na.rm=TRUE),sd(y,na.rm=TRUE))          g1 <- ifelse(generation==1,1,0)          g2 <- ifelse(generation==2,1,0)          id <- animal          animal <- ifelse(!is.na(animal),animal,0)          dam <- ifelse(!is.na(dam),dam,0)          sire <- ifelse(!is.na(sire),sire,0)      }) G <- gap::kin.morgan(meyer)$kin.matrix*2 r <- regress::regress(y~-1+g1+g2,~G,data=meyer) r #> Likelihood kernel: K = g1+g2 #>  #> Maximized log likelihood with kernel K is  -844  #>  #> Linear Coefficients: #>     Estimate Std. Error #>  g1      223        1.4 #>  g2      239        1.8 #>  #> Variance Coefficients: #>     Estimate Std. Error #>  G        32         14 #>  In       72         10 with(r,gap::h2G(sigma,sigma.cov)) #> Vp = 104 SE = 9.9  #> h2G = 0.3 SE = 0.11 eps <- 0.001 y <- with(meyer,y) x <- with(meyer,cbind(g1,g2)) ex <- gap::h2.jags(y,x,G,sigma.p=0.03,sigma.r=0.014,n.chains=3,n.iter=200) #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 306 #>    Unobserved stochastic nodes: 310 #>    Total graph size: 95805 #>  #> Initializing model knitr::kable(ex$BUGSoutput$summary,digits=2,caption=\"MCMC results for the Meyer data\")"},{"path":"https://jinghuazhao.github.io/gaawr2/articles/gaawr2.html","id":"powereqtl","dir":"Articles","previous_headings":"3 Data analysis","what":"powerEQTL","title":"Genetic Association Analysis with R (II)","text":"Consider powereQTL.SLR (simple linear regression) sample size 50-300 50, minor allele frequencies 0.005~0.5, \\(\\alpha\\)=0.05. , Figure 3.2: Power Estimation eQTL Studies 240 SNPs counterpart single-cell RNA-Seq design via powerEQTL.scRNAseq.","code":"n.designs <- 6 designs <- 1:n.designs N <- 50 * designs n.grids <- 100 index <- 1:n.grids grids <- index / n.grids MAF <- seq(0.005, n.grids/2, by=0.5) / n.grids plot(MAF,grids,type=\"n\",ylab=\"Power\") mtext(expression(paste(\"(\",alpha,\" = 0.05)\")),1,line=4.5) colors <- grDevices::hcl.colors(n.designs) for (design in designs) {   power.SLR <- rep(NA,n.grids)   for (j in index) power.SLR[j] <- powerEQTL::powerEQTL.SLR(MAF = MAF[j], FWER = 0.05, nTests = 240, slope = 0.13,                                                             n = N[design], sigma.y = 0.13)   lines(MAF,power.SLR,col=colors[design]) } legend(\"bottomright\", inset=.02, title=\"Sample size (N)\", paste(N), col=colors, horiz=FALSE, cex=0.8, lty=designs)"},{"path":"https://jinghuazhao.github.io/gaawr2/articles/gaawr2.html","id":"opentargets","dir":"Articles","previous_headings":"3 Data analysis > 3.8 powerEQTL","what":"OpenTargets","title":"Genetic Association Analysis with R (II)","text":"Table 3.5: Query ERAP2 OpenTargets","code":"gene_id <- \"ENSG00000164308\" query_string = \"   query target($ensemblId: String!){     target(ensemblId: $ensemblId){       id       approvedSymbol       biotype       geneticConstraint {         constraintType         exp         obs         score         oe         oeLower         oeUpper       }       tractability {         label         modality         value       }     }   } \" base_url <- \"https://api.platform.opentargets.org/api/v4/graphql\" variables <- list(\"ensemblId\" = gene_id) post_body <- list(query = query_string, variables = variables) r <- httr::POST(url=base_url, body=post_body, encode='json') data <- iconv(r, \"latin1\", \"ASCII\") #> No encoding supplied: defaulting to UTF-8. content <- jsonlite::fromJSON(data) knitr::kable(content, caption=\"Query of ERAP2 from OpenTargets\")"},{"path":[]},{"path":"https://jinghuazhao.github.io/gaawr2/articles/gaawr2.html","id":"ensdb-hsapiens-v75","dir":"Articles","previous_headings":"4 Annotations","what":"EnsDb.Hsapiens.v75","title":"Genetic Association Analysis with R (II)","text":"One can also use exons_data <- ensembldb::exons(EnsDb.Hsapiens.v75);head(exons_data) skipped considerably longer.","code":"ensembldb::metadata(EnsDb.Hsapiens.v75) #>                  name                               value #> 1             Db type                               EnsDb #> 2     Type of Gene ID                     Ensembl Gene ID #> 3  Supporting package                           ensembldb #> 4       Db created by ensembldb package from Bioconductor #> 5      script_version                               0.3.0 #> 6       Creation time            Thu May 18 09:15:45 2017 #> 7     ensembl_version                                  75 #> 8        ensembl_host                           localhost #> 9            Organism                        homo_sapiens #> 10        taxonomy_id                                9606 #> 11       genome_build                              GRCh37 #> 12    DBSCHEMAVERSION                                 2.0 genes <- ensembldb::genes(EnsDb.Hsapiens.v75) head(genes) #> GRanges object with 6 ranges and 6 metadata columns: #>                   seqnames      ranges strand |         gene_id   gene_name gene_biotype seq_coord_system      symbol                          entrezid #>                      <Rle>   <IRanges>  <Rle> |     <character> <character>  <character>      <character> <character>                            <list> #>   ENSG00000223972        1 11869-14412      + | ENSG00000223972     DDX11L1   pseudogene       chromosome     DDX11L1               100287596,100287102 #>   ENSG00000227232        1 14363-29806      - | ENSG00000227232      WASH7P   pseudogene       chromosome      WASH7P                  100287171,653635 #>   ENSG00000243485        1 29554-31109      + | ENSG00000243485  MIR1302-10      lincRNA       chromosome  MIR1302-10 100422919,100422834,100422831,... #>   ENSG00000237613        1 34554-36081      - | ENSG00000237613     FAM138A      lincRNA       chromosome     FAM138A              654835,645520,641702 #>   ENSG00000268020        1 52473-54936      + | ENSG00000268020      OR4G4P   pseudogene       chromosome      OR4G4P                              <NA> #>   ENSG00000240361        1 62948-63887      + | ENSG00000240361     OR4G11P   pseudogene       chromosome     OR4G11P                              <NA> #>   ------- #>   seqinfo: 273 sequences (1 circular) from GRCh37 genome transcripts_data <- ensembldb::transcripts(EnsDb.Hsapiens.v75) head(transcripts_data) #> GRanges object with 6 ranges and 6 metadata columns: #>                   seqnames      ranges strand |           tx_id             tx_biotype tx_cds_seq_start tx_cds_seq_end         gene_id         tx_name #>                      <Rle>   <IRanges>  <Rle> |     <character>            <character>        <integer>      <integer>     <character>     <character> #>   ENST00000456328        1 11869-14409      + | ENST00000456328   processed_transcript             <NA>           <NA> ENSG00000223972 ENST00000456328 #>   ENST00000515242        1 11872-14412      + | ENST00000515242 transcribed_unproces..             <NA>           <NA> ENSG00000223972 ENST00000515242 #>   ENST00000518655        1 11874-14409      + | ENST00000518655 transcribed_unproces..             <NA>           <NA> ENSG00000223972 ENST00000518655 #>   ENST00000450305        1 12010-13670      + | ENST00000450305 transcribed_unproces..             <NA>           <NA> ENSG00000223972 ENST00000450305 #>   ENST00000438504        1 14363-29370      - | ENST00000438504 unprocessed_pseudogene             <NA>           <NA> ENSG00000227232 ENST00000438504 #>   ENST00000541675        1 14363-24886      - | ENST00000541675 unprocessed_pseudogene             <NA>           <NA> ENSG00000227232 ENST00000541675 #>   ------- #>   seqinfo: 273 sequences (1 circular) from GRCh37 genome"},{"path":"https://jinghuazhao.github.io/gaawr2/articles/gaawr2.html","id":"biomart","dir":"Articles","previous_headings":"4 Annotations","what":"biomaRt","title":"Genetic Association Analysis with R (II)","text":"","code":"if (!biomaRt::martBMCheck(mart)) {   stop(\"The BioMart service is currently unavailable.\") } biomaRt::listMarts() ensembl <- biomaRt::useMart(\"ensembl\", dataset=\"hsapiens_gene_ensembl\", host=\"grch37.ensembl.org\", path=\"/biomart/martservice\") biomaRt::listDatasets(ensembl) attr <- biomaRt::listAttributes(ensembl) attr_select <- c('ensembl_gene_id', 'chromosome_name', 'start_position', 'end_position', 'description', 'hgnc_symbol',                  'transcription_start_site') gene <- biomaRt::getBM(attributes = attr_select, mart = ensembl) filter <- biomaRt::listFilters(ensembl) biomaRt::searchFilters(mart = ensembl, pattern = \"gene\") # GRCh38 ensembl <- biomaRt::useMart(\"ensembl\", dataset=\"hsapiens_gene_ensembl\")"},{"path":"https://jinghuazhao.github.io/gaawr2/articles/gaawr2.html","id":"experimental-factor-ontology-efo","dir":"Articles","previous_headings":"4 Annotations","what":"Experimental Factor Ontology (EFO)","title":"Genetic Association Analysis with R (II)","text":"ontology traits/disease formally available this2. script assumes efo-3.26.0 downloaded.","code":"library(ontologyIndex) id <- function(ontology) {   inflammatory <- grep(ontology$name,pattern=\"inflammatory\")   immune <- grep(ontology$name,pattern=\"immune\")   inf <- union(inflammatory,immune)   list(id=ontology$id[inf],name=ontology$name[inf]) } # GO data(go) goidname <- id(go) # EFO file <- \"efo.obo\" # efo-3.26.0 get_relation_names(file) efo <- get_ontology(file, extract_tags=\"everything\") length(efo) # 89 length(efo$id) # 27962 efoidname <- id(efo) diseases <- get_descendants(efo,\"EFO:0000408\") efo_0000540 <- get_descendants(efo,\"EFO:0000540\") efo_0000540name <- efo$name[efo_0000540] isd <- data.frame(efo_0000540,efo_0000540name) library(ontologyPlot) onto_plot(efo,efo_0000540)"},{"path":"https://jinghuazhao.github.io/gaawr2/articles/gaawr2.html","id":"gaawr2","dir":"Articles","previous_headings":"","what":"gaawr2","title":"Genetic Association Analysis with R (II)","text":"created showcase modern package development, like R packages includes data examples, customized functions, documentation featured articles. relevant scripts inst/scripts directory source package. Briefly, gaawr2.R creates package R. github.sh creates gaawr2 GitHub command line. pkgdown.sh makes pkgdown-style package vignette set processed bookdown package. docs.sh adds, commits pushes files GitHub. Note creation GitHub repository, SSH key assumed place. order pkgdown.sh function well, required files nature-genetics.csl need available. GitHub login still necessary enable web pages, can accessed https://jinghuazhao.github.io/gaawr2/. Upon use pkgdown, article can seen menu item Articles. carry adding files NEWS.md _pkgdown.yml. particular, needs generated .html MathJax: <script src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"><\/script>. line various analyses covered, associate packages also added suggested list packages DESCRIPTION: Note devtools::document() pkgdown.sh automatically updates NAMESPACE regenerates function documentation file(.Rd), can picked pkgdown::build_reference(). refinement greatly facilitated GitHub R-CMD-check.yaml workflow, namely, https://github.com/jinghuazhao/gaawr2/actions/workflows/R-CMD-check.yaml.","code":"Suggests:     BLR,     BGLR,     biomaRt,     bookdown,     EnsDb.Hsapiens.v75,     ensembldb,     GMMAT,     HardyWeinberg,     haplo.stats,     httr,     httpuv,     jsonlite,     knitr,     MCMCglmm,     plumber,     powerEQTL,     R2jags,     regress,     seqminer,     SNPassoc"},{"path":[]},{"path":[]},{"path":"https://jinghuazhao.github.io/gaawr2/articles/web.html","id":"python","dir":"Articles","previous_headings":"1 Hello, world!","what":"Python","title":"Web facilities","text":"Perhaps simplest way start Linux command line, nevertheless Python, works python3 -m http.server default port number 8000 available.","code":"python3 -m http.server 8000 firefox http://127.0.0.1:8000"},{"path":"https://jinghuazhao.github.io/gaawr2/articles/web.html","id":"r","dir":"Articles","previous_headings":"1 Hello, world!","what":"R","title":"Web facilities","text":"focus R following script. Upon accessing http://127.0.0.1:8000, see message “Hello, world!”. , assume working directory either , inst/ gaawr2 source package. directory installed package.","code":"httpuv::startServer(\"0.0.0.0\", 8000, list(   call = function(req) {     list(       status = 200L,       headers = list(\"Content-Type\" = \"text/plain\"),       body = \"Hello, world!\"     )   }) )"},{"path":"https://jinghuazhao.github.io/gaawr2/articles/web.html","id":"data-source","dir":"Articles","previous_headings":"","what":"Data source","title":"Web facilities","text":"envisage server data can obtained, two R packages plumber httpuv considered .","code":""},{"path":"https://jinghuazhao.github.io/gaawr2/articles/web.html","id":"a-meta-analysis","dir":"Articles","previous_headings":"2 Data source","what":"A meta-analysis","title":"Web facilities","text":"compressed data IL.18R1-1.tbl.gz based METAL1, involving study-[1|2|3] follows, Assuming script named IL.18R1.metal, IL.18R1-1.tbl.gz generated htslib, https://www.htslib.org/download/, follows, bgzipped data allows access genomic region shown .","code":"SEPARATOR TAB COLUMNCOUNTING STRICT CHROMOSOMELABEL CHR POSITIONLABEL POS CUSTOMVARIABLE N LABEL N as N TRACKPOSITIONS ON AVERAGEFREQ ON MINMAXFREQ ON ADDFILTER AF1 >= 0.001 ADDFILTER AF1 <= 0.999 MARKERLABEL SNP ALLELELABELS A1 A2 EFFECTLABEL BETA PVALUELABEL P WEIGHTLABEL N FREQLABEL AF1 STDERRLABEL SE SCHEME STDERR EFFECT_PRINT_PRECISION 8 STDERR_PRINT_PRECISION 8 GENOMICCONTROL OFF LOGPVALUE ON OUTFILE IL18R1B_dr- .tbl PROCESS study-1-IL18R1B.fastGWA.gz PROCESS study-2-IL18R1B.fastGWA.gz PROCESS study-3-IL18R1B.fastGWA.gz PROCESS study-1-IL18R1B-chrX.fastGWA.gz PROCESS study-2-IL18R1B-chrX.fastGWA.gz PROCESS study-3-IL18R1B-chrX.fastGWA.gz ANALYZE HETEROGENEITY CLEAR export protein=IL.18R1 metal ${protein}.metal 2>&1 | \\ tee ${protein}-1.tbl.log cat <(head -1 ${protein}-1.tbl) \\     <(sed '1d' ${protein}-1.tbl | \\ sort -k1,1n -k2,2n) | \\ bgzip -f > ${protein}-1.tbl.gz tabix -S1 -s1 -b2 -e2 -f ${protein}-1.tbl.gz rm ${protein}-1.tbl"},{"path":"https://jinghuazhao.github.io/gaawr2/articles/web.html","id":"plumber","dir":"Articles","previous_headings":"2 Data source","what":"plumber","title":"Web facilities","text":"Software library libsodium, https://doc.libsodium.org/, required installation. API generator R, tested follows. Indeed can see first line data, ","code":"get_data <- function(filename, region) {   query_result <- seqminer::tabix.read(filename, region)   hdr <- c(\"Chromosome\", \"Position\",            \"MarkerName\", \"Allele1\", \"Allele2\", \"Freq1\", \"FreqSE\", \"MinFreq\", \"MaxFreq\",            \"Effect\", \"StdErr\", \"logP\",            \"Direction\", \"HetISq\", \"HetChiSq\", \"HetDf\", \"logHetP\", \"N\")   df <- read.table(text = paste(query_result, collapse = \"\\n\"), sep = \"\\t\", col.names=hdr)   return(df) }  plbr <- plumber::Plumber$new() plbr$handle(\"GET\", \"/tests\", function(req, res) {   protein <- req$args$protein   region <- req$args$region   if (is.null(protein) || is.null(region)) {     res$status <- 400     return(list(error = \"Both 'protein' and 'region' must be provided\"))   }   filename <- file.path(\"tests\",paste0(protein,\"-1.tbl.gz\"))   print(filename)   if (!file.exists(filename)) {     res$status <- 404     return(list(error = paste(\"File for\", protein, \"not found\")))   }   data <- get_data(filename, region)   json_data <- jsonlite::toJSON(data, dataframe = \"rows\", na = \"null\")   res$setHeader(\"Content-Type\", \"application/json\")   return(json_data) }) options(width = 200) filename <- file.path(\"tests\",\"IL.18R1-1.tbl.gz\") region <- \"2:102700000-103800000\" data <- get_data(filename, region) head(data,1) plbr$run(port = 8001) Chromosome  Position         MarkerName Allele1 Allele2 Freq1 FreqSE MinFreq MaxFreq  Effect StdErr  logP   Direction HetISq HetChiSq HetDf logHetP     N 1          2 102700138 chr2:102700138_A_G       a       g 0.087 0.0207  0.0641  0.1376 -0.0566 0.0239 -1.75 -?-+n-?--n+   78.2   36.757     8  -4.894 12799 Running plumber API at http://127.0.0.1:8001 Running swagger Docs at http://127.0.0.1:8001/__docs__/"},{"path":[]},{"path":"https://jinghuazhao.github.io/gaawr2/articles/web.html","id":"browserconsole","dir":"Articles","previous_headings":"2 Data source > 2.3 Data access","what":"Browser/console","title":"Web facilities","text":"get query results JSON format browser: http://localhost:8001/tests?protein=IL.18R1&region=2:102700000-103800000 command line interface: curl “http://localhost:8001/tests?protein=IL.18R1&region=2:102700000-103800000” Additional work required get output curl tab-delimited data, .[0]: Access first element outer array (string containing JSON). fromjson: Parse string JSON object. .[]: Iterate array inside parsed JSON. [ … ]: Create array values needed, corresponds column TSV output. tsv?: Convert array tab-separated values. Note also selected columns (4) kept. simplest way header add manually,","code":"curl \"http://localhost:8001/tests?protein=IL.18R1&region=2:102700000-103800000\" | \\ jq -r '.[0] |    fromjson |    .[] |    [      .Chromosome, .Position, .MarkerName, .Allele1, .Allele2, .Freq1,      .Effect, .StdErr, .logP, .Direction, .HetISq, .HetChiSq, .HetDf, .logHetP, .N    ] |    @tsv' (   echo \"Chromosome|Position|MarkerName|Allele1|Allele2|Freq1|Effect|StdErr|logP|Direction|HetISq|HetChiSq|HetDf|logHetP|N\" | \\   sed 's/|/\\t/g'   curl command as above. )"},{"path":"https://jinghuazhao.github.io/gaawr2/articles/web.html","id":"r-1","dir":"Articles","previous_headings":"2 Data source > 2.3 Data access","what":"R","title":"Web facilities","text":"query easily furnished curl: giving","code":"tmp <- tempfile() curl::curl_download(\"http://localhost:8001/tests?protein=IL.18R1&region=2:102700000-103800000\", tmp) df <- jsonlite::fromJSON(readLines(tmp)) |>       jsonlite::fromJSON(flatten=TRUE) |>       as.data.frame() dim(df) [1] 4779   18"},{"path":"https://jinghuazhao.github.io/gaawr2/articles/web.html","id":"httpuv","dir":"Articles","previous_headings":"2 Data source","what":"httpuv","title":"Web facilities","text":"package gives somewhat involved version follows, mappings created content/[assets, lib] assets lib, httpuv::excludeStaticPath() indicates requests /lib/dynamic served static files handled dynamically app logic.","code":"dir.create(\"content/assets\", recursive = TRUE) dir.create(\"content/lib\", recursive = TRUE) s <- httpuv::startServer(   host = \"0.0.0.0\",    port = 5000,   app = list(     call = function(req) {       list(         status = 200L,         headers = list(           'Content-Type' = 'text/html',           'Access-Control-Allow-Origin' = '*',           'Access-Control-Allow-Methods' = 'GET, POST, OPTIONS',           'Access-Control-Allow-Headers' = 'Content-Type'         ),         body = \"Hello world!\"       )     },     staticPaths = list(       \"/assets\" = \"content/assets/\", # Static assets       \"/lib\" = httpuv::staticPath(\"content/lib\", indexhtml = FALSE),       \"/lib/dynamic\" = httpuv::excludeStaticPath()     ),     staticPathOptions = httpuv::staticPathOptions(indexhtml = TRUE)   ) ) cat(\"Server running at http://0.0.0.0:5000\\n\") s$stop()"},{"path":[]},{"path":"https://jinghuazhao.github.io/gaawr2/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jing Hua Zhao. Author, maintainer.","code":""},{"path":"https://jinghuazhao.github.io/gaawr2/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Zhao J (2025). gaawr2: Genetic Association Analysis R (II). R package version 0.0.1, https://github.com/jinghuazhao/gaawr2, https://jinghuazhao.github.io/gaawr2.","code":"@Manual{,   title = {gaawr2: Genetic Association Analysis with R (II)},   author = {Jing Hua Zhao},   year = {2025},   note = {R package version 0.0.1, https://github.com/jinghuazhao/gaawr2},   url = {https://jinghuazhao.github.io/gaawr2}, }"},{"path":"https://jinghuazhao.github.io/gaawr2/index.html","id":"genetic-association-analysis-with-r-ii","dir":"","previous_headings":"","what":"Genetic Association Analysis with R (II)","title":"Genetic Association Analysis with R (II)","text":"R package companion titled Henry-Stewart talk, part 2.","code":""},{"path":"https://jinghuazhao.github.io/gaawr2/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Genetic Association Analysis with R (II)","text":"package illustrates creation maintenance package used genetic association analysis.","code":""},{"path":"https://jinghuazhao.github.io/gaawr2/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Genetic Association Analysis with R (II)","text":"latest version gaawr2 can installed usual:","code":""},{"path":"https://jinghuazhao.github.io/gaawr2/index.html","id":"id_1-install-from-r","dir":"","previous_headings":"Installation","what":"1. Install from R","title":"Genetic Association Analysis with R (II)","text":"","code":"if (!requireNamespace(\"remotes\", quietly = TRUE)) install.packages(\"remotes\") remotes::install_github(\"jinghuazhao/gaawr2\")"},{"path":"https://jinghuazhao.github.io/gaawr2/index.html","id":"id_2-install-from-github-repository","dir":"","previous_headings":"Installation","what":"2. Install from GitHub repository","title":"Genetic Association Analysis with R (II)","text":"Dependencies detailed DECRIPTION file package GitHub.","code":"git clone https://github.com/jinghuazhao/gaawr2 R CMD INSTALL gaawr2"},{"path":"https://jinghuazhao.github.io/gaawr2/index.html","id":"a-summary-of-functions","dir":"","previous_headings":"","what":"A summary of functions","title":"Genetic Association Analysis with R (II)","text":"can seen R ","code":"library(help=gaawr2) library(gaawr2) ?gaawr2"},{"path":"https://jinghuazhao.github.io/gaawr2/reference/Welcome.html","id":null,"dir":"Reference","previous_headings":"","what":"An enhanced welcome — Welcome","title":"An enhanced welcome — Welcome","text":"hello, world extension.","code":""},{"path":"https://jinghuazhao.github.io/gaawr2/reference/Welcome.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An enhanced welcome — Welcome","text":"","code":"Welcome(n)"},{"path":"https://jinghuazhao.github.io/gaawr2/reference/Welcome.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"An enhanced welcome — Welcome","text":"n counter.","code":""},{"path":"https://jinghuazhao.github.io/gaawr2/reference/Welcome.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"An enhanced welcome — Welcome","text":"message.","code":""},{"path":"https://jinghuazhao.github.io/gaawr2/reference/Welcome.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"An enhanced welcome — Welcome","text":"simply says times message.","code":""},{"path":"https://jinghuazhao.github.io/gaawr2/reference/gaawr2.html","id":null,"dir":"Reference","previous_headings":"","what":"Genetic Association Analysis with R (II) — gaawr2","title":"Genetic Association Analysis with R (II) — gaawr2","text":"package illustrates creation maintenance package used genetic association analysis.","code":""},{"path":"https://jinghuazhao.github.io/gaawr2/reference/gaawr2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Genetic Association Analysis with R (II) — gaawr2","text":"Available data listed following table.","code":""},{"path":"https://jinghuazhao.github.io/gaawr2/reference/gaawr2.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Genetic Association Analysis with R (II) — gaawr2","text":"Vignettes package usage: Genetic Association Analysis R (II), vignette(\"gaawr2\"). Web facilities, vignette(\"web\").","code":""},{"path":[]},{"path":"https://jinghuazhao.github.io/gaawr2/reference/gaawr2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Genetic Association Analysis with R (II) — gaawr2","text":"Jing Hua Zhao collaboration colleagues.","code":""},{"path":"https://jinghuazhao.github.io/gaawr2/reference/gaawr2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Genetic Association Analysis with R (II) — gaawr2","text":"","code":"Welcome(3) #> Welcome to gaawr2 3 times"},{"path":"https://jinghuazhao.github.io/gaawr2/news/index.html","id":"gaawr2-001","dir":"Changelog","previous_headings":"","what":"gaawr2 0.0.1","title":"gaawr2 0.0.1","text":"(2025/1/29) first release","code":""}]
