[{"path":"https://jinghuazhao.github.io/gaawr2/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 gaawr2 authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jinghuazhao.github.io/gaawr2/articles/gaawr2.html","id":"hello-welcome-to-gaawr2","dir":"Articles","previous_headings":"","what":"Hello, welcome to gaawr2!","title":"Genetic Association Analysis with R (II)","text":"start session several ways printting welcome message.","code":""},{"path":"https://jinghuazhao.github.io/gaawr2/articles/gaawr2.html","id":"r","dir":"Articles","previous_headings":"1 Hello, welcome to gaawr2!","what":"R","title":"Genetic Association Analysis with R (II)","text":"usual simplest way execte code R command line prompt, now big data era, one might works Linux terminal,","code":"print(\"Hello, welcome to gaawr2!\") #> [1] \"Hello, welcome to gaawr2!\""},{"path":"https://jinghuazhao.github.io/gaawr2/articles/gaawr2.html","id":"linux-r","dir":"Articles","previous_headings":"1 Hello, welcome to gaawr2!","what":"Linux –> R","title":"Genetic Association Analysis with R (II)","text":"message wrapped environment variable called message grabbed R.","code":"export message=\"Hello, welcome to gaawr2!\" Rscript -e 'message=Sys.getenv(\"message\");print(message)'"},{"path":"https://jinghuazhao.github.io/gaawr2/articles/gaawr2.html","id":"linux-r-linux","dir":"Articles","previous_headings":"1 Hello, welcome to gaawr2!","what":"Linux –> R –> Linux","title":"Genetic Association Analysis with R (II)","text":"somewhat unusal found extremely useful, notably use R part chain commands, connected pipe operator (|) case one therefore split many lines informing Linux chain, .e., (\\), Later, use useful examples . Note R provides batch command run R script, .e., R CMD BATCH hello.R assuming message contained hello.R.","code":"echo Hello, welcome to gaawr2 | \\ Rscript -e '    message <- scan(\"stdin\", what = \"\", sep = \"\\n\", quiet = TRUE);    write.table(message, col.names = FALSE, row.names = FALSE, quote = FALSE) ' | \\ cat"},{"path":"https://jinghuazhao.github.io/gaawr2/articles/gaawr2.html","id":"operators-and-packages","dir":"Articles","previous_headings":"","what":"Operators and packages","title":"Genetic Association Analysis with R (II)","text":"operators intuitive many ways, like highlight two , |> pipe operator enabling many commands piped way Linux. %>% popularized R magritter package, essentially another yet powerful pipe command. Two often used approaches make R packages available install.packages() standard way install Comprehensive R Archive Network (CRAN) hosting many user-contributed packages. BiocManager::install() updated command install package Bioconductor project. Note scope operator (::) useful since user executes command particular package without loading , usually faster. growing popularity GitHub also due less strict control format CRAN, customarily used leave aspect later .","code":""},{"path":[]},{"path":"https://jinghuazhao.github.io/gaawr2/articles/gaawr2.html","id":"ensdb-hsapiens-v75","dir":"Articles","previous_headings":"3 Annotations","what":"EnsDb.Hsapiens.v75","title":"Genetic Association Analysis with R (II)","text":"One can also use exons_data <- ensembldb::exons(EnsDb.Hsapiens.v75);head(exons_data) skipped considerably longer.","code":"ensembldb::metadata(EnsDb.Hsapiens.v75) #>                  name                               value #> 1             Db type                               EnsDb #> 2     Type of Gene ID                     Ensembl Gene ID #> 3  Supporting package                           ensembldb #> 4       Db created by ensembldb package from Bioconductor #> 5      script_version                               0.3.0 #> 6       Creation time            Thu May 18 09:15:45 2017 #> 7     ensembl_version                                  75 #> 8        ensembl_host                           localhost #> 9            Organism                        homo_sapiens #> 10        taxonomy_id                                9606 #> 11       genome_build                              GRCh37 #> 12    DBSCHEMAVERSION                                 2.0 genes <- ensembldb::genes(EnsDb.Hsapiens.v75) head(genes) #> GRanges object with 6 ranges and 6 metadata columns: #>                   seqnames      ranges strand |         gene_id   gene_name #>                      <Rle>   <IRanges>  <Rle> |     <character> <character> #>   ENSG00000223972        1 11869-14412      + | ENSG00000223972     DDX11L1 #>   ENSG00000227232        1 14363-29806      - | ENSG00000227232      WASH7P #>   ENSG00000243485        1 29554-31109      + | ENSG00000243485  MIR1302-10 #>   ENSG00000237613        1 34554-36081      - | ENSG00000237613     FAM138A #>   ENSG00000268020        1 52473-54936      + | ENSG00000268020      OR4G4P #>   ENSG00000240361        1 62948-63887      + | ENSG00000240361     OR4G11P #>                   gene_biotype seq_coord_system      symbol #>                    <character>      <character> <character> #>   ENSG00000223972   pseudogene       chromosome     DDX11L1 #>   ENSG00000227232   pseudogene       chromosome      WASH7P #>   ENSG00000243485      lincRNA       chromosome  MIR1302-10 #>   ENSG00000237613      lincRNA       chromosome     FAM138A #>   ENSG00000268020   pseudogene       chromosome      OR4G4P #>   ENSG00000240361   pseudogene       chromosome     OR4G11P #>                                            entrezid #>                                              <list> #>   ENSG00000223972               100287596,100287102 #>   ENSG00000227232                  100287171,653635 #>   ENSG00000243485 100422919,100422834,100422831,... #>   ENSG00000237613              654835,645520,641702 #>   ENSG00000268020                              <NA> #>   ENSG00000240361                              <NA> #>   ------- #>   seqinfo: 273 sequences (1 circular) from GRCh37 genome transcripts_data <- ensembldb::transcripts(EnsDb.Hsapiens.v75) head(transcripts_data) #> GRanges object with 6 ranges and 6 metadata columns: #>                   seqnames      ranges strand |           tx_id #>                      <Rle>   <IRanges>  <Rle> |     <character> #>   ENST00000456328        1 11869-14409      + | ENST00000456328 #>   ENST00000515242        1 11872-14412      + | ENST00000515242 #>   ENST00000518655        1 11874-14409      + | ENST00000518655 #>   ENST00000450305        1 12010-13670      + | ENST00000450305 #>   ENST00000438504        1 14363-29370      - | ENST00000438504 #>   ENST00000541675        1 14363-24886      - | ENST00000541675 #>                               tx_biotype tx_cds_seq_start tx_cds_seq_end #>                              <character>        <integer>      <integer> #>   ENST00000456328   processed_transcript             <NA>           <NA> #>   ENST00000515242 transcribed_unproces..             <NA>           <NA> #>   ENST00000518655 transcribed_unproces..             <NA>           <NA> #>   ENST00000450305 transcribed_unproces..             <NA>           <NA> #>   ENST00000438504 unprocessed_pseudogene             <NA>           <NA> #>   ENST00000541675 unprocessed_pseudogene             <NA>           <NA> #>                           gene_id         tx_name #>                       <character>     <character> #>   ENST00000456328 ENSG00000223972 ENST00000456328 #>   ENST00000515242 ENSG00000223972 ENST00000515242 #>   ENST00000518655 ENSG00000223972 ENST00000518655 #>   ENST00000450305 ENSG00000223972 ENST00000450305 #>   ENST00000438504 ENSG00000227232 ENST00000438504 #>   ENST00000541675 ENSG00000227232 ENST00000541675 #>   ------- #>   seqinfo: 273 sequences (1 circular) from GRCh37 genome"},{"path":"https://jinghuazhao.github.io/gaawr2/articles/gaawr2.html","id":"biomart","dir":"Articles","previous_headings":"3 Annotations","what":"biomaRt","title":"Genetic Association Analysis with R (II)","text":"","code":"biomaRt::listMarts() mart <- biomaRt::useMart(\"ENSEMBL_MART_FUNCGEN\") biomaRt::listDatasets(mart) mart <- biomaRt::useMart(\"ensembl\") biomaRt::listDatasets(mart) ensembl <- biomaRt::useMart(biomart=\"ensembl\", dataset=\"hsapiens_gene_ensembl\", host=\"grch37.ensembl.org\", path=\"/biomart/martservice\") attr <- biomaRt::listAttributes(ensembl) attr_select <- c('ensembl_gene_id', 'chromosome_name', 'start_position', 'end_position', 'description', 'hgnc_symbol',                  'transcription_start_site') gene <- biomaRt::getBM(attributes = attr_select, mart = ensembl) filter <- biomaRt::listFilters(ensembl) biomaRt::searchFilters(mart = ensembl, pattern = \"gene\")"},{"path":"https://jinghuazhao.github.io/gaawr2/articles/gaawr2.html","id":"experimental-factor-ontology-efo","dir":"Articles","previous_headings":"3 Annotations","what":"Experimental Factor Ontology (EFO)","title":"Genetic Association Analysis with R (II)","text":"ontology traits/disease formally available this1.","code":"library(ontologyIndex) id <- function(ontology) {   inflammatory <- grep(ontology$name,pattern=\"inflammatory\")   immune <- grep(ontology$name,pattern=\"immune\")   inf <- union(inflammatory,immune)   list(id=ontology$id[inf],name=ontology$name[inf]) } # GO data(go) goidname <- id(go) # EFO file <- \"efo.obo\" # efo-3.26.0 get_relation_names(file) efo <- get_ontology(file, extract_tags=\"everything\") length(efo) # 89 length(efo$id) # 27962 efoidname <- id(efo) diseases <- get_descendants(efo,\"EFO:0000408\") efo_0000540 <- get_descendants(efo,\"EFO:0000540\") efo_0000540name <- efo$name[efo_0000540] isd <- data.frame(efo_0000540,efo_0000540name) save(efo,diseases,isd,efoidname,goidname, file=\"efo.rda\") write.table(isd,file=\"efo_0000540.csv\",col.names=FALSE,row.names=FALSE,sep=\",\") library(ontologyPlot) onto_plot(efo,efo_0000540)"},{"path":"https://jinghuazhao.github.io/gaawr2/articles/gaawr2.html","id":"rentrez","dir":"Articles","previous_headings":"3 Annotations","what":"rentrez","title":"Genetic Association Analysis with R (II)","text":"","code":"library(rentrez) entrez_dbs() entrez_db_links(\"pubmed\") pubmed_fields <- entrez_db_searchable(\"pubmed\") # set_entrez_key(\"\") Sys.getenv(\"ENTREZ_KEY\") term <- \"pQTLs OR (protein AND quantitative AND trait AND loci) AND human [MH] AND (plasma OR Serum)\" r <- entrez_search(db=\"pubmed\",term=term,use_history=TRUE) class(r) names(r) with(r,web_history) unlink(paste(\"pubmed\",c(\"fetch\",\"summary\"),sep=\".\")) fields <- c(\"uid\", \"pubdate\", \"sortfirstauthor\", \"title\", \"source\", \"volume\", \"pages\") for(i in seq(1,with(r,count),50)) {   cat(i+49, \"records downloaded\\r\")   f <- entrez_fetch(db=\"pubmed\", web_history=with(r,web_history), rettype=\"text\", retmax=50, retstart=i)   write.table(f, col.names=FALSE, row.names=FALSE, file=\"pubmed.fetch\", append=TRUE)   s <- entrez_summary(db=\"pubmed\", web_history=with(r,web_history), rettype=\"text\", retmax=50, retstart=i)   e <- extract_from_esummary(s, fields)   write.table(t(e), col.names=FALSE, row.names=FALSE, file=\"pubmed.summary\", append=TRUE, sep=\"\\t\") } id <- 600807 upload <- entrez_post(db=\"omim\", id=id) asthma_variants <- entrez_link(dbfrom=\"omim\", db=\"clinvar\", cmd=\"neighbor_history\", web_history=upload) asthma_variants snp_links <- entrez_link(dbfrom=\"clinvar\", db=\"snp\", web_history=asthma_variants$web_histories$omim_clinvar, cmd=\"neighbor_history\") all_links <- entrez_link(dbfrom='pubmed', id=id, db='all')"},{"path":"https://jinghuazhao.github.io/gaawr2/articles/gaawr2.html","id":"data-analysis","dir":"Articles","previous_headings":"","what":"Data analysis","title":"Genetic Association Analysis with R (II)","text":"Topics vary heavily featured candidate gene studies, Hardy-Weinberg equilirium (HWE), counterparts Genomewide association study (GWAS) various types association statistics, QQ/Manhattan/local association plots. lot interests machine learning (ML), artificial language (AI), including deep learning (DL), just add one acronym, bulk also readily available.","code":""},{"path":"https://jinghuazhao.github.io/gaawr2/articles/gaawr2.html","id":"hardyweinberg","dir":"Articles","previous_headings":"4 Data analysis","what":"HardyWeinberg","title":"Genetic Association Analysis with R (II)","text":"set run package HWE. Three data sources used: MN blood group documentation, chromosome X SNP HLA/DQR, Figure 4.1: SNP ternary plot Table 4.1: Genotype distribution DQR","code":"options(width=200) # MN blood group SNP <- c(MM = 298, MN = 489, NN = 213) HardyWeinberg::maf(SNP) #>      N  #> 0.4575 HardyWeinberg::HWTernaryPlot(SNP,region=0,hwcurve=FALSE,grid=TRUE,markercol=\"blue\") HardyWeinberg::HWChisq(SNP, cc = 0, verbose = TRUE) #> Chi-square test for Hardy-Weinberg equilibrium (autosomal) #> Chi2 =  0.2214896 DF =  1 p-value =  0.6379073 D =  -3.69375 f =  0.01488253 # Chromosome X xSNP <- c(A=10, B=20, AA=30, AB=20, BB=10) HardyWeinberg::HWChisq(xSNP,cc=0,x.linked=TRUE,verbose=TRUE) #> Chi-square test for Hardy-Weinberg equilibrium (X-chromosomal) #> Chi2 =  14.86111 DF = 2 p-value =  0.0005928581 D =  NA f =  0.25 # HLA/DQR library(gap) DQR <- hla[,3:4] a1 <- DQR[1] a2 <- DQR[2] GenotypeCounts <- HardyWeinberg::AllelesToTriangular(a1,a2) knitr::kable(GenotypeCounts,caption=\"Genotype distribution of DQR\") HardyWeinberg::HWPerm.mult(GenotypeCounts,nperm=1000) #> Permutation test for Hardy-Weinberg equilibrium (autosomal). #> 25 alleles detected. #> Observed statistic: 1.461325e-84   1000 permutations. p-value: 0.023 HardyWeinberg::HWStr(hla[,3:4],test=\"permutation\",nperm=1000) #> 1 STRs detected. #>      STR   N Nt     MinorAF   MajorAF        Ho        He       Hp  pval #> 1 DQR.a1 271 25 0.001845018 0.1494465 0.8856089 0.9097643 2.654949 0.026"},{"path":"https://jinghuazhao.github.io/gaawr2/articles/gaawr2.html","id":"snpassoc","dir":"Articles","previous_headings":"4 Data analysis","what":"SNPassoc","title":"Genetic Association Analysis with R (II)","text":"package implements procedures appropriate candidate gene association analysis, variety genetic models.","code":""},{"path":"https://jinghuazhao.github.io/gaawr2/articles/gaawr2.html","id":"haplo-stats","dir":"Articles","previous_headings":"4 Data analysis","what":"haplo.stats","title":"Genetic Association Analysis with R (II)","text":"package considers haplotype estimation using EM-algorithms genetic association generalized linear model (GLM).","code":""},{"path":"https://jinghuazhao.github.io/gaawr2/articles/gaawr2.html","id":"pedigreemm","dir":"Articles","previous_headings":"4 Data analysis","what":"pedigreemm","title":"Genetic Association Analysis with R (II)","text":"kinship2, especially lmekin.","code":""},{"path":"https://jinghuazhao.github.io/gaawr2/articles/gaawr2.html","id":"gwas","dir":"Articles","previous_headings":"4 Data analysis","what":"GWAS","title":"Genetic Association Analysis with R (II)","text":"includes association modeling, annotation. Graphics, e.g., inst/scripts/lz.R. following packages notable, GWASExactHW, GMMAT, GWAStools, SAIGE, qqman.","code":""},{"path":"https://jinghuazhao.github.io/gaawr2/articles/gaawr2.html","id":"ml-ai","dir":"Articles","previous_headings":"4 Data analysis","what":"ML & AI","title":"Genetic Association Analysis with R (II)","text":"ML, glmnet worthy note. AI, pedagogic implementation nnet long R’s list recommended packages , neuralnet, RSNNS ported standalone package, well production packages (parallel developments Python) include tensorflow (TensorFlow), torch (PyTorch), keras (Keras).","code":""},{"path":"https://jinghuazhao.github.io/gaawr2/articles/gaawr2.html","id":"miscellaneous-topics","dir":"Articles","previous_headings":"4 Data analysis","what":"Miscellaneous topics","title":"Genetic Association Analysis with R (II)","text":"Parallel computing. Data. SeqArray format GDS PLINK, whose code handling binary encoded data (bed) widely adopted. Customized packages databases include RSQLite, RMySQL. Graphics, list includes Rgraphviz magick extremely popular graphviz ImageMagick. Omics. Proteomics MsCoreUtils, MSStats, scp. overview topic found relevant paper2. post-GWAS. demonstration OpenTargets access. Table 4.2: Query ERAP2 OpenTargets","code":"gene_id <- \"ENSG00000164308\" query_string = \"   query target($ensemblId: String!){     target(ensemblId: $ensemblId){       id       approvedSymbol       biotype       geneticConstraint {         constraintType         exp         obs         score         oe         oeLower         oeUpper       }       tractability {         label         modality         value       }     }   } \" base_url <- \"https://api.platform.opentargets.org/api/v4/graphql\" variables <- list(\"ensemblId\" = gene_id) post_body <- list(query = query_string, variables = variables) r <- httr::POST(url=base_url, body=post_body, encode='json') data <- iconv(r, \"latin1\", \"ASCII\") #> No encoding supplied: defaulting to UTF-8. content <- jsonlite::fromJSON(data) knitr::kable(content, caption=\"Query of ERAP2 from OpenTargets\")"},{"path":"https://jinghuazhao.github.io/gaawr2/articles/gaawr2.html","id":"gaawr2","dir":"Articles","previous_headings":"","what":"gaawr2","title":"Genetic Association Analysis with R (II)","text":"created showcase modern package development, like R packages includes data examples, customized functions, documentation featured articles. relevant scripts inst/scripts directory source package. Briefly, gaawr2.R creates package R. github.sh creates gaawr2 GitHub command line. pkgdown.sh makes pkgdown-style package vignette set processed bookdown package. docs.sh adds, commits pushes files GitHub. Note creation GitHub repository, SSH key assumed place. order pkgdown.sh function well, required files nature-genetics.csl need available. GitHub login still necessary enable web pages, can accessed https://jinghuazhao.github.io/gaawr2/. Upon use pkgdown, article can seen menu item Articles. carry adding files NEWS.md _pkgdown.yml. line various analyses covered, associate packages also added suggested list packages DESCRIPTION:","code":"Suggests:     HardyWeinberg,     haplo.stats,     SNPassoc,     locuszoomr,     pedigreemm,     GMMAT,     SAIGE,     BLR,     BGLR     MCMCglmm"},{"path":[]},{"path":"https://jinghuazhao.github.io/gaawr2/articles/web.html","id":"plumber","dir":"Articles","previous_headings":"","what":"plumber","title":"Web facilities","text":"API generator R, tested Caprion data follows. noted elsewhere, libsodium required installation R package. see , get query results JSON format browser: http://localhost:8001/data?protein=IL.18R1&region=2:102700000-103800000 curl: curl “http://localhost:8001/data?protein=IL.18R1&region=2:102700000-103800000” Additional work required get output curl tab-delimited data, .[0]: Access first element outer array (string containing JSON). fromjson: Parse string JSON object. .[]: Iterate array inside parsed JSON. [ … ]: Create array values needed, corresponds column TSV output. tsv?: Convert array tab-separated values. Note also selected columns (4) kept. simplest way header add manually,","code":"library(plumber) library(seqminer) library(jsonlite)  get_data <- function(filename, region) {   query_result <- seqminer::tabix.read(filename, region)   hdr <- c(\"Chromosome\", \"Position\",            \"MarkerName\", \"Allele1\", \"Allele2\", \"Freq1\", \"FreqSE\", \"MinFreq\", \"MaxFreq\",            \"Effect\", \"StdErr\", \"logP\",            \"Direction\", \"HetISq\", \"HetChiSq\", \"HetDf\", \"logHetP\", \"N\")   df <- read.table(text = paste(query_result, collapse = \"\\n\"), sep = \"\\t\", col.names=hdr)   return(df) }  options(width = 200) filename <- file.path(\"data\",\"IL.18R1-1.tbl.gz\") region <- \"2:102700000-103800000\" data <- get_data(filename, region) head(data,1)  plbr <- plumber::Plumber$new() plbr$handle(\"GET\", \"/data\", function(req, res) {   protein <- req$args$protein   region <- req$args$region   if (is.null(protein) || is.null(region)) {     res$status <- 400     return(list(error = \"Both 'protein' and 'region' must be provided\"))   }   filename <- file.path(\"data\",paste0(protein,\"-1.tbl.gz\"))   print(filename)   if (!file.exists(filename)) {     res$status <- 404     return(list(error = paste(\"File for\", protein, \"not found\")))   }   data <- get_data(filename, region)   json_data <- toJSON(data, dataframe = \"rows\", na = \"null\")   res$setHeader(\"Content-Type\", \"application/json\")   return(json_data) }) plbr$run(port = 8001) > head(data,1)   Chromosome  Position         MarkerName Allele1 Allele2 Freq1 FreqSE MinFreq MaxFreq  Effect StdErr  logP   Direction HetISq HetChiSq HetDf logHetP     N 1          2 102700138 chr2:102700138_A_G       a       g 0.087 0.0207  0.0641  0.1376 -0.0566 0.0239 -1.75 -?-+n-?--n+   78.2   36.757     8  -4.894 12799 Running plumber API at http://127.0.0.1:8001 Running swagger Docs at http://127.0.0.1:8001/__docs__/ curl \"http://localhost:8001/data?protein=IL.18R1&region=2:102700000-103800000\" | \\ jq -r '.[0] |    fromjson |    .[] |    [      .Chromosome, .Position, .MarkerName, .Allele1, .Allele2, .Freq1,      .Effect, .StdErr, .logP, .Direction, .HetISq, .HetChiSq, .HetDf, .logHetP, .N    ] |    @tsv' (   echo \"Chromosome|Position|MarkerName|Allele1|Allele2|Freq1|Effect|StdErr|logP|Direction|HetISq|HetChiSq|HetDf|logHetP|N\" | \\   sed 's/|/\\t/g'   curl command as above. )"},{"path":"https://jinghuazhao.github.io/gaawr2/articles/web.html","id":"httpuv","dir":"Articles","previous_headings":"","what":"httpuv","title":"Web facilities","text":"alternative plumber, following script sets port 8000, upon access http://127.0.0.1:8000, see message “Hello, world!”. somewhat involved version follows,","code":"startServer(\"0.0.0.0\", 8000, list(   call = function(req) {     list(       status = 200L,       headers = list(\"Content-Type\" = \"text/plain\"),       body = \"Hello, world!\"     )   }) ) s <- startServer(\"0.0.0.0\", 5000,   list(     call = function(req) {       list(         status = 200L,         headers = list(           'Content-Type' = 'text/html',           'Access-Control-Allow-Origin' = '*',           'Access-Control-Allow-Methods' = 'GET, POST, OPTIONS',           'Access-Control-Allow-Headers' = 'Content-Type'         ),         body = \"Hello world!\"       )     },     staticPaths = list(       \"/assets\" = \"content/assets/\",       \"/lib\" = staticPath(         \"content/lib\",         indexhtml = FALSE       ),       \"/lib/dynamic\" = excludeStaticPath()     ),     staticPathOptions = staticPathOptions(       indexhtml = TRUE     )   ) ) s$stop()"},{"path":[]},{"path":"https://jinghuazhao.github.io/gaawr2/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jing Hua Zhao. Author, maintainer.","code":""},{"path":"https://jinghuazhao.github.io/gaawr2/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Zhao J (2025). gaawr2: Genetic Association Analysis R (II). R package version 0.0.1.","code":"@Manual{,   title = {gaawr2: Genetic Association Analysis with R (II)},   author = {Jing Hua Zhao},   year = {2025},   note = {R package version 0.0.1}, }"},{"path":"https://jinghuazhao.github.io/gaawr2/index.html","id":"genetic-association-analysis-with-r-ii","dir":"","previous_headings":"","what":"Genetic Association Analysis with R (II)","title":"Genetic Association Analysis with R (II)","text":"R package companion titled Henry-Stewart talk, part 2.","code":""},{"path":"https://jinghuazhao.github.io/gaawr2/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Genetic Association Analysis with R (II)","text":"package illustrates creation maintenance package used genetic association analysis.","code":""},{"path":"https://jinghuazhao.github.io/gaawr2/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Genetic Association Analysis with R (II)","text":"latest version gaawr2 can installed usual:","code":""},{"path":"https://jinghuazhao.github.io/gaawr2/index.html","id":"id_1-install-from-r","dir":"","previous_headings":"Installation","what":"1. Install from R","title":"Genetic Association Analysis with R (II)","text":"","code":"if (!requireNamespace(\"remotes\", quietly = TRUE)) install.packages(\"remotes\") remotes::install_github(\"jinghuazhao/gaawr2\")"},{"path":"https://jinghuazhao.github.io/gaawr2/index.html","id":"id_2-install-from-github-repository","dir":"","previous_headings":"Installation","what":"2. Install from GitHub repository","title":"Genetic Association Analysis with R (II)","text":"Dependencies detailed DECRIPTION file package GitHub.","code":"git clone https://github.com/jinghuazhao/gaawr2 R CMD INSTALL gaawr2"},{"path":"https://jinghuazhao.github.io/gaawr2/index.html","id":"a-summary-of-functions","dir":"","previous_headings":"","what":"A summary of functions","title":"Genetic Association Analysis with R (II)","text":"can seen R ","code":"library(help=gaawr2) library(gaawr2) ?gaawr2"},{"path":"https://jinghuazhao.github.io/gaawr2/reference/biomaRt.html","id":null,"dir":"Reference","previous_headings":"","what":"biomaRt — biomaRt","title":"biomaRt — biomaRt","text":"Curation biomaRt","code":""},{"path":"https://jinghuazhao.github.io/gaawr2/reference/biomaRt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"biomaRt — biomaRt","text":"","code":"biomaRt"},{"path":"https://jinghuazhao.github.io/gaawr2/reference/biomaRt.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"biomaRt — biomaRt","text":"data frame 42198 rows 11 variables: ensembl_gene_id ENSEMBL gene id chromosome_name Chromosome name (1-22,X,Y) start_position start end_position end description Description hgnc_symbol HGNC symbol ensembl_transcript_id ENSEMBL transcript id transcription_start_site TSS transcript_start Transcript start transcript_end Transcript end uniprotswissprot UnitProt id","code":""},{"path":"https://jinghuazhao.github.io/gaawr2/reference/biomaRt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"biomaRt — biomaRt","text":"extraction using R.","code":""},{"path":"https://jinghuazhao.github.io/gaawr2/reference/gaawr2.html","id":null,"dir":"Reference","previous_headings":"","what":"Genetic Association Analysis with R (II) — gaawr2","title":"Genetic Association Analysis with R (II) — gaawr2","text":"package illustrates creation maintenance package used genetic association analysis.","code":""},{"path":"https://jinghuazhao.github.io/gaawr2/reference/gaawr2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Genetic Association Analysis with R (II) — gaawr2","text":"Available data listed following table. generic description datasets follows. chr Chromosome. start Start position. end End position. gene Gene name. UniProt UniProt ID.","code":""},{"path":"https://jinghuazhao.github.io/gaawr2/reference/gaawr2.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Genetic Association Analysis with R (II) — gaawr2","text":"Vignettes package usage: Genetic Association Analysis R (II), vignette(\"gaawr2\"). Web facilities, vignette(\"web\").","code":""},{"path":"https://jinghuazhao.github.io/gaawr2/reference/gaawr2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Genetic Association Analysis with R (II) — gaawr2","text":"Jing Hua Zhao collaboration colleagues.","code":""},{"path":"https://jinghuazhao.github.io/gaawr2/reference/gaawr2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Genetic Association Analysis with R (II) — gaawr2","text":"","code":"if (FALSE) { # \\dontrun{ head(biomaRt) } # }"},{"path":"https://jinghuazhao.github.io/gaawr2/news/index.html","id":"gaawr2-001","dir":"Changelog","previous_headings":"","what":"gaawr2 0.0.1","title":"gaawr2 0.0.1","text":"(2025/1/16) first release","code":""}]
